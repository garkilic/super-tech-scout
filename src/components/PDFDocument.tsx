import React from 'react';
import { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';

const styles = StyleSheet.create({
  page: {
    padding: 40,
    backgroundColor: '#ffffff',
  },
  header: {
    marginBottom: 30,
    paddingBottom: 20,
    borderBottom: '1pt solid #000000',
  },
  title: {
    fontSize: 28,
    marginBottom: 10,
    color: '#000000',
    fontWeight: 'bold',
  },
  subtitle: {
    fontSize: 16,
    color: '#666666',
    marginBottom: 5,
  },
  section: {
    marginBottom: 25,
  },
  sectionTitle: {
    fontSize: 18,
    marginBottom: 15,
    color: '#000000',
    fontWeight: 'bold',
  },
  content: {
    fontSize: 12,
    lineHeight: 1.5,
    color: '#333333',
    marginBottom: 10,
  },
  bulletPoint: {
    fontSize: 12,
    lineHeight: 1.5,
    color: '#333333',
    marginLeft: 10,
    marginBottom: 5,
  },
  codeBlock: {
    fontSize: 10,
    lineHeight: 1.5,
    color: '#333333',
    backgroundColor: '#f5f5f5',
    padding: 10,
    marginBottom: 10,
    fontFamily: 'Courier',
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 40,
    right: 40,
    fontSize: 10,
    color: '#666666',
    textAlign: 'center',
  },
});

interface PDFDocumentProps {
  title: string;
  content: string;
  topic: string;
}

const PDFDocument: React.FC<PDFDocumentProps> = ({ title, content, topic }) => {
  // Clean up the content to remove unsupported markdown
  const cleanContent = content
    .replace(/```[\s\S]*?```/g, '') // Remove code blocks
    .replace(/`([^`]+)`/g, '$1') // Remove inline code
    .replace(/\*\*([^*]+)\*\*/g, '$1') // Remove bold
    .replace(/\*([^*]+)\*/g, '$1') // Remove italic
    .replace(/\[([^\]]+)\]\([^)]+\)/g, '$1') // Remove links
    .replace(/\n\s*[-*+]\s/g, '\n• ') // Convert markdown bullets to bullet points
    .replace(/\n\s*\d+\.\s/g, '\n• '); // Convert numbered lists to bullet points

  // Split content into sections based on headings
  const sections = cleanContent.split(/(?=^#+\s)/m).filter(section => section.trim());

  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.header}>
          <Text style={styles.title}>{title}</Text>
          <Text style={styles.subtitle}>Topic: {topic}</Text>
          <Text style={styles.subtitle}>Generated: {new Date().toLocaleDateString()}</Text>
        </View>

        {sections.map((section, index) => {
          const lines = section.split('\n');
          const title = lines[0].replace(/^#+\s*/, '');
          const content = lines.slice(1).join('\n');

          return (
            <View key={index} style={styles.section}>
              <Text style={styles.sectionTitle}>{title}</Text>
              {content.split('\n').map((line, lineIndex) => {
                if (line.trim().startsWith('•')) {
                  return (
                    <Text key={lineIndex} style={styles.bulletPoint}>
                      {line}
                    </Text>
                  );
                }
                return (
                  <Text key={lineIndex} style={styles.content}>
                    {line}
                  </Text>
                );
              })}
            </View>
          );
        })}

        <Text style={styles.footer}>
          Generated by Super Tech Scout - {new Date().toLocaleDateString()}
        </Text>
      </Page>
    </Document>
  );
};

export default PDFDocument; 